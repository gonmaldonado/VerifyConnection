<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>